openapi: 3.0.2
info:
    description: API access to your community.
    title: Vanilla API
    version: "2.0"
servers:
    - url: /api/v2
paths:
    /authenticators:
        get:
            summary: List the authenticators.
            tags:
                - Authenticators
            parameters:
                - name: type
                  description: Filter by one or more authenticator types.
                  in: query
                  schema:
                      type: array
                      items:
                          type: string
                      format: form
                - $ref: "#/components/parameters/Page"
                - name: limit
                  in: query
                  description: >
                      Maximum number of items to be included in the response. See [Pagination](https://docs.vanillaforums.com/apiv2/#pagination).
                  schema:
                      type: integer
                      default: 10
                      minimum: 1
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/AuthenticatorFragment"
        post:
            x-hidden: true
            summary: Post new authenticator.
            tags:
                - Authenticators
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AuthenticatorPostSchema"
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthenticatorFragment"
                    description: Success
                "403":
                    $ref: "#/components/responses/PermissionError"
    "/authenticators/{id}":
        parameters:
            - name: id
              in: path
              description: The ID of the authenticator to look up.
              required: true
              schema:
                  type: integer
        delete:
            summary: Delete an authenticator.
            tags:
                - Authenticators
            responses:
                "204":
                    description: Success
        get:
            summary: Get a single authenticator.
            tags:
                - Authenticators
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthenticatorFragment"
        patch:
            summary: Update an authenticator.
            tags:
                - Authenticators
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                default:
                                    type: boolean
                                active:
                                    type: boolean
                                visible:
                                    type: boolean
            responses:
                "200":
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuthenticatorFragment"
components:
    schemas:
        AuthenticatorFragment:
            type: object
            properties:
                authenticatorID:
                    type: integer
                    description: The authenticator's ID.
                name:
                    type: string
                    description: A human readible name for the authenticator.
                type:
                    type: string
                    description: The type of authenticator
                    example: oauth2
                clientID:
                    type: string
                default:
                    type: boolean
                active:
                    type: boolean
                    example: true
                visible:
                    type: boolean
                isOidc:
                    type: boolean
                    default: false
                urls:
                    type: object
                    properties:
                        signInUrl:
                            nullable: true
                            format: uri
                            type: string
                        signOutUrl:
                            nullable: true
                            format: uri
                            type: string
                        authenticateUrl:
                            nullable: true
                            format: uri
                            type: string
                        registerUrl:
                            nullable: true
                            format: uri
                            type: string
                        passwordUrl:
                            nullable: true
                            format: uri
                            type: string
                        profileUrl:
                            nullable: true
                            format: uri
                            type: string
            required:
                - authenticatorID
                - name
                - type
                - clientID
                - default
                - active
                - visible
        Oauth2PostSchema:
            type: object
            properties:
                associationKey:
                    type: string
                    description: OAuth Configuration Client ID (Unique ID of the authentication application)
                authorizeUrl:
                    type: string
                    description: OAuth Configuration Authorize URL (URL where users sign-in with the authentication provider).
                tokenUrl:
                    type: string
                    description: OAuth Configuration Token URL (Endpoint to retrieve the access token for a user).
                acceptedScope:
                    type: string
                    description: Advanced Settings Request Scope (Enter the scope to be sent with token requests).
                profileKeyEmail:
                    type: string
                    description: General SSO Settings Email (The key in the JSON array to designate emails).
                    default: email
                profileKeyPhoto:
                    type: string
                    description: General SSO Settings Photo (The key in the JSON array to designate photo URL).
                    default: picture
                profileKeyName:
                    type: string
                    description: General SSO Settings Display Name (The key in the JSON array to designate display name).
                    default: displayname
                profileKeyFullName:
                    type: string
                    description: General SSO Settings Full Name (The key in the JSON array to designate full name).
                    default: name
                profileKeyUniqueID:
                    type: string
                    description: General SSO Settings User ID (The key in the JSON array to designate user ID).
                    default: user_id
                profileKeyRoles:
                    type: string
                    description: General SSO Settings Roles (The key in the JSON array to designate roles).
                    default: roles
                prompt:
                    type: string
                    description: Advanced Settings Prompt (Prompt parameter set with authorize requests).
                    enum:
                        - consent
                        - consent and login
                        - login
                        - none
                    default: login
                bearerToken:
                    type: boolean
                    description: Advanced Settings Authorization Code in Header (When requesting the profile, pass the access token in the HTTP header. i.e Authorization Bearer [accesstoken])
                    default: false
                allowAccessTokens:
                    type: boolean
                    description: Advanced Settings Allow Access Tokens (Allow this connection to issue API access tokens).
                    default: false
                baseUrl:
                    type: string
                    description: Should essentially be the protocol & domain of the `Authorize URL`.
                basicAuthToken:
                    type: boolean
                    description: Advanced Settings Basic Authorization Code in Header (When requesting the Access Token, pass the basic Auth token in the HTTP header. i.e Authorization [Authorization =\> Basic base64_encode(\$rawToken)])
                    default: false
                isOidc:
                    type: boolean
                    description: OAuth Configuration This is an OIDC Connection (This connection should use OIDC ID Token instead of a profile URL).
                    default: false
            required:
                - associationKey
                - baseUrl
                - authorizeUrl
                - tokenUrl
        AuthenticatorPostSchema:
            type: object
            properties:
                name:
                    type: string
                    description: A human readable name for the authenticator.
                type:
                    type: string
                    description: The type of authenticator
                    example: oauth2
                clientID:
                    type: string
                default:
                    type: boolean
                    default: false
                active:
                    type: boolean
                    default: false
                    example: true
                visible:
                    type: boolean
                    default: false
                secret:
                    type: string
                urls:
                    type: object
                    properties:
                        signInUrl:
                            nullable: true
                            format: uri
                            type: string
                        signOutUrl:
                            nullable: true
                            format: uri
                            type: string
                        authenticateUrl:
                            nullable: true
                            format: uri
                            type: string
                        registerUrl:
                            nullable: true
                            format: uri
                            type: string
                        passwordUrl:
                            nullable: true
                            format: uri
                            type: string
                        profileUrl:
                            nullable: true
                            format: uri
                            type: string
                attributes:
                    type: object
                    description: Configs for each authenticator type.
                    anyOf:
                        - $ref: "#/components/schemas/Oauth2PostSchema"
            required:
                - name
                - type
# AuthenticationKey           varchar(64)  - clientID
# AuthenticationSchemeAlias   varchar(32)  - type
# Name                        varchar(50)  - name
# URL                         varchar(255)
# AssociationSecret           text
# AssociationHashMethod       varchar(20)
# AuthenticateUrl             varchar(255) - urls.authenticateUrl
# RegisterUrl                 varchar(255) - urls.registerUrl
# SignInUrl                   varchar(255) - urls.signInUrl
# SignOutUrl                  varchar(255) - urls.signOutUrl
# OIDCConnection              varchar(255) - urls.useOIDCConnection
# PasswordUrl                 varchar(255) - urls.passwordUrl
# ProfileUrl                  varchar(255) - urls.profileUrl
# Attributes                  text
# Active                      tinyint(4)   - active
# IsDefault                   tinyint(4)   - default
